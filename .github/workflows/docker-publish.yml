name: Build and deploy

on:
  push:
    branches: [ master ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME_PROXY: "${{ github.repository_owner }}/ssgg/proxy"
  IMAGE_NAME_FRONTEND: "${{ github.repository_owner }}/ssgg/frontend"
  IMAGE_NAME_BACKEND: "${{ github.repository_owner }}/ssgg/backend"
  IMAGE_NAME_DB_HANDLER: "${{ github.repository_owner }}/ssgg/db-handler"
  IMAGE_NAME_DB_UPGRADER: "${{ github.repository_owner }}/ssgg/db-upgrader"


jobs:
  build-proxy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Proxy image
      - name: Extract SSGG Proxy Docker metadata
        id: meta_proxy
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PROXY}}

      - name: Build and push SSGG Proxy image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: proxy
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_proxy.outputs.tags }}
          labels: ${{ steps.meta_proxy.outputs.labels }}

      # Frontend image
      - name: Extract SSGG Frontend Docker metadata
        id: meta_frontend
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}

      - name: Build and push SSGG Frontend image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}

      # Backend image
      - name: Extract SSGG Backend Docker metadata
        id: meta_backend
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}

      - name: Build and push SSGG Backend image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: backend
          file: backend/web/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}

      # DB Handler image
      - name: Extract SSGG DB Handler Docker metadata
        id: meta_db_handler
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DB_HANDLER }}

      - name: Build and push SSGG DB Handler image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: backend
          file: backend/database_handler/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_db_handler.outputs.tags }}
          labels: ${{ steps.meta_db_handler.outputs.labels }}

      # DB Upgrader image
      - name: Extract SSGG Frontend Docker metadata
        id: meta_db_upgrader
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DB_UPGRADER }}

      - name: Build and push SSGG Frontend image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: backend
          file: backend/database_migration/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_db_upgrader.outputs.tags }}
          labels: ${{ steps.meta_db_upgrader.outputs.labels }}

      # Update docker-compose
      - name: Update docker-compose on the server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.production.yml"
          target: "ssgg-prod"

      # Deploy
      - name: Upgrade images on the server and deploy
        uses: appleboy/ssh-action@master
        env:
          COMPOSE_FILE: "ssgg-prod/docker-compose.production.yml"
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker-compose pull
            docker-compose up -d --remove-orphans
